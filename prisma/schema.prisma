// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id String @id @default(uuid())
  email String @unique
  emailVerify Boolean @default(false)
  emailToken String?
  name String 
  password String
  activate Boolean @default(false)
  inventories Inventories[]
  // userCategory UserCategory[]
  category Category[]
}

model Inventories {
  id String @id @default(uuid())
  user_id String
  name String
  description String?
  user Users @relation(fields: [user_id], references: [id])
  products Products[]
}

// model UserCategory {
//   id String @id @default(uuid())
//   user_id String
//   user Users @relation(fields: [user_id], references: [id])
//   enabled Boolean @default(true)
//   category Category[]
// }

model Category {
  id String @id @default(uuid())
  // userCategory_id String
  user_id String
  categories String[]
  // userCategory UserCategory @relation(fields: [userCategory_id], references: [id] )
  user Users @relation(fields: [user_id], references: [id] )
  product Products[]
}

model Products {
  id String @id @default(uuid())
  inventory_id String
  name String
  quantity Int
  date_expire DateTime?
  category String
  price Int
  inventory Inventories @relation(fields: [inventory_id], references: [id]) 
  categoryRef Category @relation(fields: [category], references: [id])
}
